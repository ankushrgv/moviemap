# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-07-04 10:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.CharField(db_index=True, max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('director', models.CharField(db_index=True, max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distributor', models.CharField(db_index=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('fun_facts', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=80)),
                ('actor1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actor1', to='m_maps.Actor')),
                ('actor2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actor2', to='m_maps.Actor')),
                ('actor3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actor3', to='m_maps.Actor')),
                ('director', models.ManyToManyField(to='m_maps.Director')),
                ('distributor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='m_maps.Distributor')),
                ('location', models.ManyToManyField(to='m_maps.Location')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_company', models.CharField(db_index=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(db_index=True, max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writer', models.CharField(db_index=True, max_length=30)),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='production_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='m_maps.ProductionCompany'),
        ),
        migrations.AddField(
            model_name='movie',
            name='release_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='m_maps.ReleaseYear'),
        ),
        migrations.AddField(
            model_name='movie',
            name='writer',
            field=models.ManyToManyField(to='m_maps.Writer'),
        ),
    ]
